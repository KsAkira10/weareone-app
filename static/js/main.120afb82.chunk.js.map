{"version":3,"sources":["assets/images/logos sync /^/.//.*/.png$","assets/images/logos/clubtime.png","assets/images/logos/coretime.png","assets/images/logos/hardbase.png","assets/images/logos/housetime.png","assets/images/logos/teatime.png","assets/images/logos/technobase.png","assets/images/logos/trancebase.png","components/radio/head.component.tsx","components/radio/buttons.component.tsx","components/radio/player.component.tsx","pages/Home/Home.tsx","pages/Pages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","./clubtime.png","./coretime.png","./hardbase.png","./housetime.png","./teatime.png","./technobase.png","./trancebase.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","RadioHead","_ref","name","alt","react_default","a","createElement","className","src","require","concat","getLogo","defaultProps","RadioButtons","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","label","handleChange","bind","assertThisInitialized","event","target","value","setState","objectSpread","onChange","_this2","aria-label","items","length","item","index","key","htmlFor","type","checked","Component","RadioPlayer","source","_useState","useState","_useState2","slicedToArray","play","setPlay","_useState3","_useState4","bolt","setBolt","useEffect","player","document","getElementById","load","low","high","onClick","then","catch","error","console","pause","react_fontawesome_index_es","icon","Home","streams","JSON","parse","stringify","Config","stream","radioHead","radioButtons","toConsumableArray","audioSelected","forEach","Fragment","head_component","buttons_component_RadioButtons","player_component","Pages","react_router_dom","react_router","exact","path","component","App","pages_Pages","Boolean","window","location","hostname","match","library","add","fas","faPlay","faPause","faBolt","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.120afb82.chunk.js","sourcesContent":["var map = {\n\t\"./clubtime.png\": 41,\n\t\"./coretime.png\": 42,\n\t\"./hardbase.png\": 43,\n\t\"./housetime.png\": 44,\n\t\"./teatime.png\": 45,\n\t\"./technobase.png\": 46,\n\t\"./trancebase.png\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;","module.exports = __webpack_public_path__ + \"static/media/clubtime.16ee7241.png\";","module.exports = __webpack_public_path__ + \"static/media/coretime.3aa1ce40.png\";","module.exports = __webpack_public_path__ + \"static/media/hardbase.dd304781.png\";","module.exports = __webpack_public_path__ + \"static/media/housetime.f1926c26.png\";","module.exports = __webpack_public_path__ + \"static/media/teatime.18e205fd.png\";","module.exports = __webpack_public_path__ + \"static/media/technobase.1a2a7dba.png\";","module.exports = __webpack_public_path__ + \"static/media/trancebase.382c95e9.png\";","import React from 'react';\n\nexport interface IRadioHeadState {\n  name?: string;\n  alt?: string;\n};\n\nexport interface IRadioHeadProps extends IRadioHeadState { }\n\nconst RadioHead: React.FC<IRadioHeadState> = ({ name, alt }) => {\n  const getLogo = (name?: string): string => {\n    if (name) {\n      return require(`../../assets/images/logos/${name}.png`);\n    }\n    return '';\n  };\n  \n  return (\n    <section className=\"radio-head\">\n      <img className=\"img-fluid mx-auto\" src={getLogo(name)} alt={alt} />\n    </section>\n  );\n};\n\nRadioHead.defaultProps = {\n  name: 'technobase',\n  alt: 'TechnoBase.FM'\n};\n\nexport default RadioHead;","import React, { Component, ChangeEvent } from 'react';\n\nexport interface IRadioButtonsState {\n  label?: string;\n  name?: string;\n}\n\nexport interface IRadioButtonsProps extends IRadioButtonsState {\n  items: IRadioButtonsState[];\n  onChange?: any;\n}\n\nexport default class RadioButtons extends Component<IRadioButtonsProps, IRadioButtonsState> {\n  state: IRadioButtonsState;\n\n  constructor(props: IRadioButtonsProps) {\n    super(props);\n\n    this.state = {\n      name: props.name || 'technobase',\n      label: props.label || 'TechnoBase.FM',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event: ChangeEvent<HTMLInputElement>) {\n    const state = { name: event.target.value, label: event.target.name };\n    this.setState({ ...state });\n\n    this.props.onChange({ ...state });\n  }\n\n  render() {\n    return (\n      <section className=\"container\">\n        <form className=\"radio-buttons\" aria-label=\"We Are One\">\n          {this.props.items.length > 0 && this.props.items.map((item: IRadioButtonsState, index: number) => (\n            <label key={index} htmlFor={item.name} className={`radio-button radio-button--${item.name} ${this.state.name === item.name ? 'radio-button--active' : ''}`}>\n              <input\n                id={item.name}\n                name={item.label}\n                type=\"radio\"\n                value={item.name}\n                checked={this.state.name === item.name}\n                onChange={this.handleChange}\n              />\n            </label>\n          ))}\n        </form>\n      </section>\n    );\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport interface IRadioPlayerProps {\n  source: {\n    high: string;\n    low: string;\n  };\n}\n\nconst RadioPlayer: React.FC<IRadioPlayerProps> = ({ source }) => {\n  const [play, setPlay] = useState(true);\n  const [bolt, setBolt] = useState('low');\n\n  useEffect(() => {\n    const player = document.getElementById('player') as HTMLAudioElement;\n    const source = document.getElementById(`source-${bolt}`) as HTMLSourceElement;\n    player.src = source.src;\n    player.load();\n    setPlay(true);\n  }, [source, bolt]);\n\n  const handlePlayerControllerClick = () => {\n    const player = document.getElementById('player') as HTMLAudioElement;\n    if (play) {\n      player\n        .play()\n        .then(() => {\n          setPlay(false);\n        })\n        .catch((error) => {\n          setPlay(true);\n          console.error(error);\n        });\n      return;\n    }\n    player.pause();\n    setPlay(true);\n  };\n\n  const handleChange = (e: any) => {\n    const player = document.getElementById('player') as HTMLAudioElement;\n    const source = document.getElementById(`source-${e.target.value}`) as HTMLSourceElement;\n    player.src = source.src;\n    player.load();\n    setPlay(true);\n    setBolt(e.target.value);\n  };\n\n  return (\n    <section className=\"radio-player__container\">\n      <main className=\"radio-player__main\">\n        <header className=\"radio-player__header\">\n          <aside></aside>\n        </header>\n      </main>\n      <footer className=\"radio-player__footer d-flex align-items-center justify-content-around\">\n        <audio id=\"player\">\n          <source src={source.low} type=\"audio/ogg\" id=\"source-low\" />\n          <source src={source.high} type=\"audio/mpeg\" id=\"source-high\" />\n          Your browser does not support the audio element.\n        </audio>\n        <div className=\"player-button d-flex\" >\n          <button type=\"button\" className=\"player-button\" onClick={handlePlayerControllerClick}>\n            <FontAwesomeIcon icon={play ? 'play' : 'pause'} />\n          </button>\n        </div>\n        <div className=\"player-button player-button--group d-flex align-items-center justify-content-between\">\n          <label htmlFor=\"low\" className={`${bolt === 'low' && 'active'} d-flex`}>\n            <input type=\"radio\" name=\"low\" id=\"low\" value=\"low\" checked={bolt === 'low'} onChange={handleChange} />\n            LOW\n          </label>\n          <div id=\"bolt\" className=\"player-button player-button--bolt d-flex\">\n            <FontAwesomeIcon icon=\"bolt\" />\n          </div>\n          <label htmlFor=\"high\" className={`${bolt === 'high' && 'active'} d-flex`}>\n            <input type=\"radio\" name=\"high\" id=\"high\" value=\"high\" checked={bolt === 'high'} onChange={handleChange} />\n            HIGH\n          </label>\n        </div>\n        <div className=\"player-button d-flex\" >\n          <button type=\"button\" className=\"player-button\">\n            <span>Greeting</span>\n          </button>\n        </div>\n      </footer>\n    </section>\n  );\n}\n\nexport default RadioPlayer;\n","import React, { Component } from 'react';\nimport RadioHead, { IRadioHeadProps } from '../../components/radio/head.component';\nimport RadioButtons, { IRadioButtonsProps, IRadioButtonsState } from '../../components/radio/buttons.component';\nimport RadioPlayer, { IRadioPlayerProps } from '../../components/radio/player.component';\n\nimport Config from './../../config/config.json';\n\ninterface IHomeState {\n  radioHead: IRadioHeadProps;\n  radioButtons: IRadioButtonsProps;\n  audioSelected: IRadioPlayerProps;\n}\n\ninterface IHomeProps { }\n\nexport default class Home extends Component<IHomeProps, IHomeState> {\n  streams = (JSON.parse(JSON.stringify(Config))).streams;\n  stream = this.streams[0];\n  state: IHomeState = {\n    radioHead: {\n      name: this.stream.name,\n      alt: this.stream.label,\n    },\n    radioButtons: {\n      items: [...this.streams],\n    },\n    audioSelected: {\n      source: {\n        high: this.stream.high,\n        low: this.stream.low,\n      }\n    },\n  };\n\n  constructor(props: IHomeProps) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e: IRadioButtonsState) {\n    this.streams.forEach((stream: { name: string, low: string, high: string }) => {\n      if(stream.name === e.name) {\n        this.setState({\n          radioHead: {\n            name: e.name,\n            alt: e.label,\n          },\n          audioSelected: {\n            source: {\n              high: stream.high,\n              low: stream.low,\n            }\n          },\n        });\n      }\n    });    \n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"container\">\n          <RadioHead {...this.state.radioHead} />\n        </header>\n        <main className=\"container\">\n          <article>\n            <RadioButtons onChange={this.handleChange} items={this.state.radioButtons.items} />\n            <RadioPlayer source={this.state.audioSelected.source} />\n          </article>\n        </main>\n        <footer className=\"container\"></footer>\n      </>\n    );\n  }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/Home';\n\nconst Pages: React.FC = () => {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n    </Router>\n  );\n}\n\nexport default Pages;\n","import React from 'react';\nimport Pages from './pages/Pages';\n\nconst App: React.FC = (props: object) => {\n  return (\n    <>\n      <Pages {...props} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas, faPlay, faPause, faBolt} from '@fortawesome/free-solid-svg-icons'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlibrary.add(fas, faPlay, faPause, faBolt);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}